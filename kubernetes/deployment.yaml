apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
      kompose.version: 1.19.0 (f63a961c)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 80
    selector:
      io.kompose.service: phpmyadmin
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
      kompose.version: 1.19.0 (f63a961c)
    creationTimestamp: null
    labels:
      io.kompose.service: wp
    name: wp
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: wp
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
      kompose.version: 1.19.0 (f63a961c)
    creationTimestamp: null
    labels:
      io.kompose.service: db
    name: db
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
          kompose.version: 1.19.0 (f63a961c)
        creationTimestamp: null
        labels:
          io.kompose.service: db
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: wordpress
          - name: MYSQL_PASSWORD
            value: wordpress
          - name: MYSQL_ROOT_PASSWORD
            value: root
          - name: MYSQL_USER
            value: wordpress
          image: mysql:5.7.14
          failureThreshold: 3
          name: db
          ports:
            - containerPort: 3306
              name: mysql
              protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: db-claim0
        restartPolicy: Always
        volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: db-claim0
    name: db-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
      kompose.version: 1.19.0 (f63a961c)
    creationTimestamp: null
    labels:
      io.kompose.service: phpmyadmin
    name: phpmyadmin
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
          kompose.version: 1.19.0 (f63a961c)
        creationTimestamp: null
        labels:
          io.kompose.service: phpmyadmin
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: root
          - name: PMA_HOST
            value: db
          image: phpmyadmin/phpmyadmin
          name: phpmyadmin
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
      kompose.version: 1.19.0 (f63a961c)
    creationTimestamp: null
    labels:
      io.kompose.service: wp
    name: wp
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o ./kubernetes/deployment.yaml
          kompose.version: 1.19.0 (f63a961c)
        creationTimestamp: null
        labels:
          io.kompose.service: wp
      spec:
        containers:
        - env:
          - name: WORDPRESS_DB_HOST
            value: db:3306
          - name: WORDPRESS_DB_NAME
            value: wordpress
          - name: WORDPRESS_DB_PASSWORD
            value: wordpress
          - name: WORDPRESS_DB_USER
            value: wordpress
          image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
          name: wp
          ports:
          - containerPort: 80
          resources: {}
          volumeMounts:
          - mountPath: /usr/local/etc/php/conf.d/conf.ini
            name: wp-claim0
          - mountPath: /var/www/html
            name: wp-claim1
        restartPolicy: Always
        volumes:
        - name: wp-claim0
          persistentVolumeClaim:
            claimName: wp-claim0
        - name: wp-claim1
          persistentVolumeClaim:
            claimName: wp-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: wp-claim0
    name: wp-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: wp-claim1
    name: wp-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

